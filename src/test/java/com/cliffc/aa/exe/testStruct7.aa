// Recursive linked-list discovery, applied
// Type: A:@{ n1=A; v1=int64; }
// Eval: @{ n1=nil; v1=4; }
map = { fcn lst ->
  if lst ? @{ n1 = (map fcn lst.n0); v1 = (fcn lst.v0); } : nil 
};
(map {dec -> (- dec 1)} @{n0 = nil; v0 = 5; })
