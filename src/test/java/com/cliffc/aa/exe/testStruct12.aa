
// Type: *[7]( _, 1, 2)
// Eval: *[7]( _, 1, 2)

// Displays are closed & defined def-by-def.  So prior partial displays in the gen set.

// So AA does something EXE does not - AA can/will allow fcns to forward-ref other fcns.
// This allows mutual recursion (is_even/is_odd).
// To do this in AA, I need the display to allow self-references.

// This version works, because the loads of dsp1 outside the def of dsp1 allow
// a Fresh effect on "bound", so each call can resolve separate dyntables.
// factorial, is_even/is_odd, mutually recursive defined in same display chunk

fcn = { -> (pair @{a =1;} @{b =2;})._ }; 
(pair (fcn).a (fcn).b)
