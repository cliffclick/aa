// More complicated nested application
// Type: { - - A -> *[2]( _, 5, 5) }
// Eval: <B:*[0]@{ _ map=<B,LAM6>; },LAM7>
// fcn ignores p and returns a fcn to make a pair
fcn = { p -> { a -> (pair a a) }};
// map fun over x
map = { fun x -> (fun x)};
// fcn to pass q to fcn (which ignores it and returns a pair-maker)
// which map then applies to 5 to make a pair of 5s.
{ q -> (map (fcn q) 5)}
