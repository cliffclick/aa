// One DynLoad, fcn needs DynTable
// Type: @{ a=int64; b=int64; c=int64; d=int64; }
// Eval: @{ a=4; b=4; c=12; d=5; }

fcn = { x y ->
  (@{
     qii ={ x y -> (* (+1  x) (+1  y)) }; // i i -> i
     qif ={ x y -> (* (+1  x) (f2i y)) }; // i f -> i
     qfi ={ x y -> (* (f2i x) (+1  y)) }; // f i -> i
     qff ={ x y -> (* (f2i x) (f2i y)) }; // f f -> i
   }._  // Which of {q*} should be picked?
   x y )
};

bar = { x ->
  if (rnd)
  ? (fcn x 2   )  // Picks [qii/qfi]
  : (fcn x 1.3f)  // Picks [qif/qff]
};

baz = { ->
  if (rnd)
  ? (bar 3   )  // Passing in int
  : (bar 4.9f)  // Passing in flt
};
@{
 a = (baz);
 b = (baz);
 c = (baz);
 d = (baz);
}
