// One DynLoad, fcn needs DynTable
// Type: ( int64, flt64)
// Eval: ( 3, 3.3f)
// TODO: NOT LOOKED AT

fcn = { x y ->
  @{
     qii={ x y -> (+ (+1  x) (+1  y)) }; // i i -> i
     qif={ x y -> (+ (+1  x) (f2i y)) }; // i f -> i
     qfi={ x y -> (+ (f2i x) (+1  y)) }; // f i -> i
     qff={ x y -> (+ (f2i x) (f2i y)) }; // f f -> i
  }._(x,y)   // Which of {q*} should be picked?
};

bar = { x ->
  if 1
  ? (fcn x 2   )  // Picks [D0:qii/qfi]
  : (fcn x 2.2f)  // Picks [D0:qif/qff]
};

baz = { ->
  if 0
  ? (bar 3   )  // Passing in int
  : (bar 3.9f)  // Passing in flt
};
(baz)
