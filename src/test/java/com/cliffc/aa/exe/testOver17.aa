// Check wrapped prims
// Type: Unresolved dynamic field
// Eval: CRASH

fwrap = { ff ->
  @{ f = ff;
     is0 = (f> 1.0f ff);
     mul = @{
       fimul = { y0 -> (fwrap (f* ff (i2f y0.i))) };
       ffmul = { y1 -> (fwrap (f* ff      y1.f )) };
     };
     sub = @{
       fisub = { y2 -> (fwrap (f- ff (i2f y2.i))) };
       ffsub = { y3 -> (fwrap (f- ff      y3.f )) };
     };
   }
};

iwrap = { ii ->
  @{ i = ii;
     is0 = (== ii 0);
     mul = @{
       iimul = { y4 -> (iwrap ( *      ii  y4.i)) };
       ifmul = { y5 -> (fwrap (f* (i2f ii) y5.f)) };
     };
     sub = @{
       iisub = { y6 -> (iwrap ( -      ii  y6.i)) };
       ifsub = { y7 -> (fwrap (f- (i2f ii) y7.f)) };
     };
   }
};

c1 = (iwrap 1);
c5 = (iwrap 5);

// should type error
fact = { n -> if n.is0 ? c1 : (n.mul._ (fact (n.sub._ c1))) };

f22 = (fwrap 2.2f);
//(fact c5)
(fact f22)
